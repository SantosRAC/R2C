// config file for defining DSL2 module options and publishing paths

params {
    outdir = '../results'           // outside 'workflows' directory, e.g. 'nextflow/results' and not the projectDir 'nextflow/workflows/results' (ofc we can discuss other options)
    publish_dir_mode = 'symlink'    // avoid duplicating output files (I think we should always try to use symlink instead of copy mode)
}

// OBS: that is just a draft version; we must try to remove every 'code smell' from our code (if possible)

profiles {
    process_low {
        process {
            label = 'process_low'
            cpus   = { 1 * task.attempt }
            memory = { 4.GB * task.attempt }
            time   = { 4.h * task.attempt }
        }
    }

    process_medium {
        process {
            label = 'process_medium'
            cpus   = { 2 * task.attempt }
            memory = { 8.GB * task.attempt }
            time   = { 2.h * task.attempt }
        }
    }

    process_high {
        process {
            label = 'process_high'
            cpus   = { 4 * task.attempt }
            memory = { 12.GB * task.attempt }
            time   = { 1.h * task.attempt }
        }
    }
}

process {
    // Basic configuration for all profiles
    errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    maxRetries    = 3
    maxErrors     = '-1'

    withName: 'getReadFTP' {
        publishDir = [
            path: "$projectDir/${params.outdir}/0_getReadFTP",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'sampleInfo' {
        publishDir = [
            path: "$projectDir/${params.outdir}/1_sampleInfo",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'downloadReadFTP' {
        publishDir = [
            path: "$projectDir/${params.outdir}/2_rawReads",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'raw_fastqc' {
        publishDir = [
            path: "$projectDir/${params.outdir}/3_rawReadsFastQC",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'raw_multiqc' {
        publishDir = [
            path: "$projectDir/${params.outdir}/4_rawReadsMultiQC",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'bbduk' {
        publishDir = [
            path: "$projectDir/${params.outdir}/5_trimmedReads",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'trimmed_fastqc' {
        publishDir = [
            path: "$projectDir/${params.outdir}/6_trimmedReadsFastQC",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'trimmed_multiqc' {
        publishDir = [
            path: "$projectDir/${params.outdir}/7_trimmedReadsMultiQC",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'salmonIndex' {
        publishDir = [
            path: "$projectDir/${params.outdir}/8_salmonIndex",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'salmonQuant' {
        publishDir = [
            path: "$projectDir/${params.outdir}/9_salmonQuant",
            mode: params.publish_dir_mode,
            saveAs: { "${it}/" } // Preserva estrutura de diret√≥rios
        ]
    }

    //TODO: create path for the expression matrix (combine quantification files)

    withName: 'buildNetwork' {
        publishDir = [
            path: "$projectDir/${params.outdir}/11_network",
            mode: params.publish_dir_mode,
        ]
    }
}
